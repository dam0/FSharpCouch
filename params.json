{"body":"FSharpCouch\r\n=======\r\n\r\n**FSharpCouch** is a fairly simple wrapper around many of the most common aspects of the CouchDB API. It provides an API that works well with F# records, function composition, etc.\r\n\r\nHow To Get It\r\n=======\r\n\r\nFSharpCouch is available on NuGet Gallery as id FSharpCouch.\r\n\r\nGetting Started\r\n=======\r\n\r\nHere are a few examples to get you started with using FSharpCouch:\r\n\r\n\ttype Person = {\r\n\t\tFirstName : string\r\n\t\tLastName : string\r\n\t}\r\n\r\n\tlet couchUrl = \"http://localhost:5984\"\r\n    let databaseName = \"people\"\r\n\r\nCreate a document (if the database doesn't exist, it will be created):\r\n    \r\n    let result = { FirstName = \"John\"; LastName = \"Doe\" }\r\n                 |> createDocument couchUrl databaseName\r\n\r\nGet a document:\r\n\r\n    let createdPerson = getDocument<Person> couchUrl databaseName result.id \r\n\r\nGet all documents:\r\n\r\n\tlet allDocs = FSharpCouch.getAllDocuments<Person> couchUrl databaseName\r\n\t\r\nDelete a document:\r\n\r\n    deleteDocument couchUrl documentName result.id result.rev\t\r\n\r\nCreate a database: \r\n\r\n    createDatabase couchUrl databaseName\r\n\t\r\nDelete a database:\r\n\r\n    deleteDatabase couchUrl databaseName\r\n","tagline":"A port of SharpCouch to F# (http://code.google.com/p/couchbrowse/source/browse/trunk/SharpCouch/SharpCouch.cs)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"FSharpCouch"}